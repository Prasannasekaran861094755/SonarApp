name: Build and SonarQube Scan
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-and-scan:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Restore NuGet packages
        run: nuget restore -SolutionDirectory .

      - name: Build the project
        shell: cmd
        run: '"C:\Program Files (x86)\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" /p:Configuration=Release'

      - name: Run tests with coverage
        run: |
          # Install Coverlet for coverage
          dotnet tool install --global coverlet.console
          # Run tests with coverage
          coverlet ./path/to/your/test/project/bin/Release/net472/YourTestProject.dll --target "dotnet" --targetargs "test ./path/to/your/test/project --no-build"
          # Convert coverage report to OpenCover format
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:./coverage.cobertura.xml -targetdir:./coverage -reporttypes:OpenCover

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.sources=.
            -Dsonar.inclusions=**/*.cs
            -Dsonar.exclusions=**/obj/**,**/bin/**,**/Properties/**,**/App_Data/**
            -Dsonar.cs.opencover.reportsPaths=./coverage.opencover.xml
