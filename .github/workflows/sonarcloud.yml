name: Build and SonarQube Scan
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-and-scan:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '4.7.2'  # Match your project's target framework

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test --configuration Release --collect:"XPlat Code Coverage" --logger:trx
          # Convert coverage report to OpenCover format (if needed)
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:./**/coverage.cobertura.xml -targetdir:./coverage -reporttypes:OpenCover

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.sources=.
            -Dsonar.inclusions=**/*.cs
            -Dsonar.exclusions=**/obj/**,**/bin/**,**/Properties/**,**/App_Data/**
            -Dsonar.cs.opencover.reportsPaths=./coverage.opencover.xml
